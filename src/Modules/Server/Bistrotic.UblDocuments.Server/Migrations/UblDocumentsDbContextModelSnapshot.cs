// <auto-generated />
using System;
using Bistrotic.UblDocuments.Infrastructure.Ef;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bistrotic.UblDocuments.Migrations
{
    [DbContext(typeof(UblDocumentsDbContext))]
    partial class UblDocumentsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bistrotic.UblDocuments.Application.Integration", b =>
                {
                    b.Property<string>("MessageId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("IntegrationDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("IntegrationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("ReceivedDate")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("MessageId");

                    b.HasIndex("IntegrationDate");

                    b.HasIndex("MessageId")
                        .IsUnique();

                    b.HasIndex("ReceivedDate");

                    b.ToTable("Integrations");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Aggregates.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountingCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountingCostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BuyerReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CopyIndicator")
                        .HasColumnType("bit");

                    b.Property<string>("CustomizationID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DespatchDocumentReferenceDocumentReferenceId")
                        .HasColumnType("int");

                    b.Property<string>("DocumentCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("DueDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InvoiceTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("IssueDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("LineCountNumeric")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Partition")
                        .HasColumnType("int");

                    b.Property<string>("PaymentAlternativeCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaymentAlternativeExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PaymentExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PricingCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricingExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProfileExecutionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxCurrencyCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TaxExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset?>("TaxPointDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UBLVersionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UUID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceId");

                    b.HasIndex("DespatchDocumentReferenceDocumentReferenceId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Entities.BillingReference", b =>
                {
                    b.Property<int>("BillingReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdditionalDocumentReferenceDocumentReferenceId")
                        .HasColumnType("int");

                    b.Property<int?>("CreditNoteDocumentReferenceDocumentReferenceId")
                        .HasColumnType("int");

                    b.Property<int?>("DebitNoteDocumentReferenceDocumentReferenceId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceDocumentReferenceDocumentReferenceId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("ReminderDocumentReferenceDocumentReferenceId")
                        .HasColumnType("int");

                    b.Property<int?>("SelfBilledCreditNoteDocumentReferenceDocumentReferenceId")
                        .HasColumnType("int");

                    b.Property<int?>("SelfBilledInvoiceDocumentReferenceDocumentReferenceId")
                        .HasColumnType("int");

                    b.HasKey("BillingReferenceId");

                    b.HasIndex("AdditionalDocumentReferenceDocumentReferenceId");

                    b.HasIndex("CreditNoteDocumentReferenceDocumentReferenceId");

                    b.HasIndex("DebitNoteDocumentReferenceDocumentReferenceId");

                    b.HasIndex("InvoiceDocumentReferenceDocumentReferenceId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ReminderDocumentReferenceDocumentReferenceId");

                    b.HasIndex("SelfBilledCreditNoteDocumentReferenceDocumentReferenceId");

                    b.HasIndex("SelfBilledInvoiceDocumentReferenceDocumentReferenceId");

                    b.ToTable("BillingReferences");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Entities.BillingReferenceLine", b =>
                {
                    b.Property<int>("BillingReferenceLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BillingReferenceId")
                        .HasColumnType("int");

                    b.Property<string>("ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BillingReferenceLineId");

                    b.HasIndex("BillingReferenceId");

                    b.ToTable("BillingReferenceLines");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Entities.Country", b =>
                {
                    b.Property<string>("IdentificationCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Partition")
                        .HasColumnType("int");

                    b.HasKey("IdentificationCode");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Entities.DocumentReference", b =>
                {
                    b.Property<int>("DocumentReferenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CopyIndicator")
                        .HasColumnType("bit");

                    b.Property<string>("DocumentDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentStatusCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentTypeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId1")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId2")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId3")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId4")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset?>("IssueDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("LanguageID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocaleCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UUID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VersionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DocumentReferenceId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("InvoiceId1");

                    b.HasIndex("InvoiceId2");

                    b.HasIndex("InvoiceId3");

                    b.HasIndex("InvoiceId4");

                    b.ToTable("DocumentReferences");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Entities.InvoiceLine", b =>
                {
                    b.Property<int>("InvoiceLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountingCost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountingCostCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FreeOfChargeIndicator")
                        .HasColumnType("bit");

                    b.Property<string>("ID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<decimal>("InvoicedQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("LineExtensionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NoteText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentPurposeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset?>("TaxPointDateTime")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UUID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceLineId");

                    b.HasIndex("InvoiceId");

                    b.HasIndex("ItemId");

                    b.ToTable("InvoiceLines");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Entities.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CatalogueIndicator")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HazardousRiskIndicator")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PackQuantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PackSizeNumeric")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Aggregates.Invoice", b =>
                {
                    b.HasOne("Bistrotic.UblDocuments.Types.Entities.DocumentReference", "DespatchDocumentReference")
                        .WithMany()
                        .HasForeignKey("DespatchDocumentReferenceDocumentReferenceId");

                    b.OwnsOne("Bistrotic.UblDocuments.Types.Entities.DeliveryTerms", "DeliveryTerms", b1 =>
                        {
                            b1.Property<int>("InvoiceId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("AllowanceCharge")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("DeliveryLocation")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("ID")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("LossRiskResponsibilityCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoices");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsOne("Bistrotic.UblDocuments.Types.Entities.LegalMonetaryTotal", "LegalMonetaryTotal", b1 =>
                        {
                            b1.Property<int>("InvoiceId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("AllowanceTotalAmount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("ChargeTotalAmount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("LineExtensionAmount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PayableAlternativeAmount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PayableAmount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PayableRoundingAmount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PrepaidAmount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("TaxExclusiveAmount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("TaxInclusiveAmount")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoices");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.OwnsOne("Bistrotic.UblDocuments.Types.Entities.OrderReference", "OrderReference", b1 =>
                        {
                            b1.Property<int>("InvoiceId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<bool>("CopyIndicator")
                                .HasColumnType("bit");

                            b1.Property<string>("CustomerReference")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("DocumentReferenceId")
                                .HasColumnType("int");

                            b1.Property<string>("ID")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<DateTimeOffset?>("IssueDateTime")
                                .HasColumnType("datetimeoffset");

                            b1.Property<string>("OrderTypeCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("SalesOrderID")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("UUID")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("InvoiceId");

                            b1.HasIndex("DocumentReferenceId");

                            b1.ToTable("Invoices");

                            b1.HasOne("Bistrotic.UblDocuments.Types.Entities.DocumentReference", "DocumentReference")
                                .WithMany()
                                .HasForeignKey("DocumentReferenceId");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");

                            b1.Navigation("DocumentReference");
                        });

                    b.OwnsOne("Bistrotic.UblDocuments.Types.Entities.Period", "InvoicePeriod", b1 =>
                        {
                            b1.Property<int>("InvoiceId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DescriptionCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal?>("DurationMeasure")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<DateTimeOffset?>("EndDateTime")
                                .HasColumnType("datetimeoffset");

                            b1.Property<DateTimeOffset?>("StartDateTime")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("InvoiceId");

                            b1.ToTable("Invoices");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceId");
                        });

                    b.Navigation("DeliveryTerms")
                        .IsRequired();

                    b.Navigation("DespatchDocumentReference");

                    b.Navigation("InvoicePeriod")
                        .IsRequired();

                    b.Navigation("LegalMonetaryTotal")
                        .IsRequired();

                    b.Navigation("OrderReference")
                        .IsRequired();
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Entities.BillingReference", b =>
                {
                    b.HasOne("Bistrotic.UblDocuments.Types.Entities.DocumentReference", "AdditionalDocumentReference")
                        .WithMany()
                        .HasForeignKey("AdditionalDocumentReferenceDocumentReferenceId");

                    b.HasOne("Bistrotic.UblDocuments.Types.Entities.DocumentReference", "CreditNoteDocumentReference")
                        .WithMany()
                        .HasForeignKey("CreditNoteDocumentReferenceDocumentReferenceId");

                    b.HasOne("Bistrotic.UblDocuments.Types.Entities.DocumentReference", "DebitNoteDocumentReference")
                        .WithMany()
                        .HasForeignKey("DebitNoteDocumentReferenceDocumentReferenceId");

                    b.HasOne("Bistrotic.UblDocuments.Types.Entities.DocumentReference", "InvoiceDocumentReference")
                        .WithMany()
                        .HasForeignKey("InvoiceDocumentReferenceDocumentReferenceId");

                    b.HasOne("Bistrotic.UblDocuments.Types.Aggregates.Invoice", null)
                        .WithMany("BillingReference")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("Bistrotic.UblDocuments.Types.Entities.DocumentReference", "ReminderDocumentReference")
                        .WithMany()
                        .HasForeignKey("ReminderDocumentReferenceDocumentReferenceId");

                    b.HasOne("Bistrotic.UblDocuments.Types.Entities.DocumentReference", "SelfBilledCreditNoteDocumentReference")
                        .WithMany()
                        .HasForeignKey("SelfBilledCreditNoteDocumentReferenceDocumentReferenceId");

                    b.HasOne("Bistrotic.UblDocuments.Types.Entities.DocumentReference", "SelfBilledInvoiceDocumentReference")
                        .WithMany()
                        .HasForeignKey("SelfBilledInvoiceDocumentReferenceDocumentReferenceId");

                    b.Navigation("AdditionalDocumentReference");

                    b.Navigation("CreditNoteDocumentReference");

                    b.Navigation("DebitNoteDocumentReference");

                    b.Navigation("InvoiceDocumentReference");

                    b.Navigation("ReminderDocumentReference");

                    b.Navigation("SelfBilledCreditNoteDocumentReference");

                    b.Navigation("SelfBilledInvoiceDocumentReference");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Entities.BillingReferenceLine", b =>
                {
                    b.HasOne("Bistrotic.UblDocuments.Types.Entities.BillingReference", "BillingReference")
                        .WithMany("BillingReferenceLine")
                        .HasForeignKey("BillingReferenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BillingReference");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Entities.DocumentReference", b =>
                {
                    b.HasOne("Bistrotic.UblDocuments.Types.Aggregates.Invoice", null)
                        .WithMany("AdditionalDocumentReference")
                        .HasForeignKey("InvoiceId");

                    b.HasOne("Bistrotic.UblDocuments.Types.Aggregates.Invoice", null)
                        .WithMany("ContractDocumentReference")
                        .HasForeignKey("InvoiceId1");

                    b.HasOne("Bistrotic.UblDocuments.Types.Aggregates.Invoice", null)
                        .WithMany("OriginatorDocumentReference")
                        .HasForeignKey("InvoiceId2");

                    b.HasOne("Bistrotic.UblDocuments.Types.Aggregates.Invoice", null)
                        .WithMany("ReceiptDocumentReference")
                        .HasForeignKey("InvoiceId3");

                    b.HasOne("Bistrotic.UblDocuments.Types.Aggregates.Invoice", null)
                        .WithMany("StatementDocumentReference")
                        .HasForeignKey("InvoiceId4");

                    b.OwnsOne("Bistrotic.UblDocuments.Types.Entities.Attachment", "Attachment", b1 =>
                        {
                            b1.Property<int>("DocumentReferenceId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("EmbeddedDocumentBinaryObject")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("DocumentReferenceId");

                            b1.ToTable("DocumentReferences");

                            b1.WithOwner()
                                .HasForeignKey("DocumentReferenceId");

                            b1.OwnsOne("Bistrotic.UblDocuments.Types.Entities.ExternalReference", "ExternalReference", b2 =>
                                {
                                    b2.Property<int>("AttachmentDocumentReferenceId")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int")
                                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                                    b2.Property<string>("CharacterSetCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Description")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("DocumentHash")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("EncodingCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<DateTimeOffset>("ExpiryDate")
                                        .HasColumnType("datetimeoffset");

                                    b2.Property<DateTime>("ExpiryTime")
                                        .HasColumnType("datetime2");

                                    b2.Property<string>("FileName")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("FormatCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("HashAlgorithmMethod")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("MimeCode")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("URI")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("AttachmentDocumentReferenceId");

                                    b2.ToTable("DocumentReferences");

                                    b2.WithOwner()
                                        .HasForeignKey("AttachmentDocumentReferenceId");
                                });

                            b1.Navigation("ExternalReference")
                                .IsRequired();
                        });

                    b.OwnsOne("Bistrotic.UblDocuments.Types.Entities.Period", "ValidityPeriod", b1 =>
                        {
                            b1.Property<int>("DocumentReferenceId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DescriptionCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal?>("DurationMeasure")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<DateTimeOffset?>("EndDateTime")
                                .HasColumnType("datetimeoffset");

                            b1.Property<DateTimeOffset?>("StartDateTime")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("DocumentReferenceId");

                            b1.ToTable("DocumentReferences");

                            b1.WithOwner()
                                .HasForeignKey("DocumentReferenceId");
                        });

                    b.Navigation("Attachment")
                        .IsRequired();

                    b.Navigation("ValidityPeriod");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Entities.InvoiceLine", b =>
                {
                    b.HasOne("Bistrotic.UblDocuments.Types.Aggregates.Invoice", "Invoice")
                        .WithMany("InvoiceLine")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bistrotic.UblDocuments.Types.Entities.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId");

                    b.OwnsOne("Bistrotic.UblDocuments.Types.Entities.Period", "InvoicePeriod", b1 =>
                        {
                            b1.Property<int>("InvoiceLineId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("DescriptionCode")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<decimal?>("DurationMeasure")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<DateTimeOffset?>("EndDateTime")
                                .HasColumnType("datetimeoffset");

                            b1.Property<DateTimeOffset?>("StartDateTime")
                                .HasColumnType("datetimeoffset");

                            b1.HasKey("InvoiceLineId");

                            b1.ToTable("InvoiceLines");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceLineId");
                        });

                    b.OwnsOne("Bistrotic.UblDocuments.Types.Entities.Price", "Price", b1 =>
                        {
                            b1.Property<int>("InvoiceLineId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("BaseQuantity")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("OrderableUnitFactorRate")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal>("PriceAmount")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal?>("PriceType")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("PriceTypeCode")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("InvoiceLineId");

                            b1.ToTable("InvoiceLines");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceLineId");
                        });

                    b.OwnsOne("System.Collections.Generic.List<Bistrotic.UblDocuments.Types.Entities.OrderLineReference>", "OrderLineReference", b1 =>
                        {
                            b1.Property<int>("InvoiceLineId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int")
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<int>("Capacity")
                                .HasColumnType("int");

                            b1.HasKey("InvoiceLineId");

                            b1.ToTable("InvoiceLines");

                            b1.WithOwner()
                                .HasForeignKey("InvoiceLineId");
                        });

                    b.Navigation("Invoice");

                    b.Navigation("InvoicePeriod")
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("OrderLineReference")
                        .IsRequired();

                    b.Navigation("Price")
                        .IsRequired();
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Aggregates.Invoice", b =>
                {
                    b.Navigation("AdditionalDocumentReference");

                    b.Navigation("BillingReference");

                    b.Navigation("ContractDocumentReference");

                    b.Navigation("InvoiceLine");

                    b.Navigation("OriginatorDocumentReference");

                    b.Navigation("ReceiptDocumentReference");

                    b.Navigation("StatementDocumentReference");
                });

            modelBuilder.Entity("Bistrotic.UblDocuments.Types.Entities.BillingReference", b =>
                {
                    b.Navigation("BillingReferenceLine");
                });
#pragma warning restore 612, 618
        }
    }
}
